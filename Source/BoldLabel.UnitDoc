<!DOCTYPE DLUnitDoc>
<DLUnitDoc ExplicitSummary="true" Version="$Header: /BfD/Source/BoldAwareGUI/BoldControls/BoldLabel.UnitDoc 7     01-10-22 12:42 Jeho $">
   <Classes>
      <Class Name="TBoldCustomLabel">
         <Methods>
            <Method Name="AfterMakeUptoDate">
               <Summary></Summary>
               <Desc></Desc>
            </Method>
            <Method Name="CMParentColorChanged">
               <Summary></Summary>
               <Desc></Desc>
            </Method>
            <Method Name="Create">
               <Summary></Summary>
               <Desc></Desc>
            </Method>
            <Method Name="Destroy">
               <Summary></Summary>
               <Desc></Desc>
            </Method>
            <Method Name="GetBoldHandle">
               <Summary></Summary>
               <Desc></Desc>
            </Method>
            <Method Name="GetColor">
               <Summary></Summary>
               <Desc></Desc>
            </Method>
            <Method Name="GetContextType">
               <Summary></Summary>
               <Desc></Desc>
            </Method>
            <Method Name="GetEffectiveColor">
               <Summary></Summary>
               <Desc></Desc>
            </Method>
            <Method Name="GetEffectiveFont">
               <Summary></Summary>
               <Desc></Desc>
            </Method>
            <Method Name="GetExpression">
               <Summary></Summary>
               <Desc></Desc>
            </Method>
            <Method Name="GetFollower">
               <Summary></Summary>
               <Desc></Desc>
            </Method>
            <Method Name="GetFont">
               <Summary></Summary>
               <Desc></Desc>
            </Method>
            <Method Name="GetText">
               <Summary></Summary>
               <Desc></Desc>
            </Method>
            <Method Name="GetVariableList">
               <Summary></Summary>
               <Desc></Desc>
            </Method>
            <Method Name="Loaded">
               <Summary></Summary>
               <Desc></Desc>
            </Method>
            <Method Name="SetBoldDisplay">
               <Summary></Summary>
               <Desc></Desc>
            </Method>
            <Method Name="SetBoldHandle">
               <Summary></Summary>
               <Desc></Desc>
            </Method>
            <Method Name="SetColor">
               <Summary></Summary>
               <Desc></Desc>
            </Method>
            <Method Name="SetEffectiveColor">
               <Summary></Summary>
               <Desc></Desc>
            </Method>
            <Method Name="SetExpression">
               <Summary></Summary>
               <Desc></Desc>
            </Method>
            <Method Name="SetFont">
               <Summary></Summary>
               <Desc></Desc>
            </Method>
            <Method Name="_FontChanged">
               <Summary></Summary>
               <Desc></Desc>
            </Method>
         </Methods>
         <Properties>
            <Property Name="BoldHandle">
               <Summary>The BoldHandle property indicates which handle the control should follow. </Summary>
               <Desc>Since <InlineCode>TBoldCustomLabel</InlineCode> is a single-line control it will follow the <InlineCode>Value</InlineCode> property of the handle. Note that for a <See Class="TBoldListHandle"/> this means the current element in the list.</Desc>
            </Property>
            <Property Name="BoldProperties">
               <Summary></Summary>
               <Desc>This property has a number of sub-properties that control the Bold-aware aspects of the control. In the context of this control, the sub-properties have the following meaning:
                  <BH>ApplyPolicy</BH>
                  <P>Since this is a display only control, this sub-property has no effect.</P>
                  <BH>CleanOnEqual</BH>
                  <P>Since this is a display only control, this sub-property has no effect.</P>
                  <BH>DragMode</BH>
                  <P>Determines what will happen if the user attempts to drag from the control.</P>
                  <UL>
                     <LI><InlineCode>bdgNone</InlineCode> - No drag will be performed.</LI>
                     <LI><InlineCode>bdgSelection</InlineCode> - If <See Property="BoldHandle"/><InlineCode>.Value</InlineCode> is a <InlineCode>TBoldObject</InlineCode> (or one of its subclasses) then it will be placed in the dragged objects list, <InlineCode>BoldGUIHandler.DraggedObjects</InlineCode>, otherwise no drag will be initiated.</LI>
                  </UL>
                  <P>If <InlineCode>OnStartDrag</InlineCode> has been set, this property is ignored altogether.</P>
                  <BH>DropMode</BH>
                  <P>Determines what will happen if the user attempts to drop on the control. This property only has an effect if <InlineCode>BoldHandle.Value</InlineCode> is a single-link role of an object. In this case the property has the following meaning:</P>
                  <UL>
                     <LI><InlineCode>bdpNone</InlineCode> - No action.</LI>
                     <LI><InlineCode>bdpInsert</InlineCode>, <InlineCode>bdpAppend</InlineCode> - If a single object is being dragged, and the link is <InlineCode>nil</InlineCode>, and the dragged object is of the correct type the link will be set to the dragged object.</LI>
                     <LI><InlineCode>bdpReplace</InlineCode> - If a single object is being dragged and the dragged object is of the correct type the link will be set to the dragged object.</LI>
                  </UL>
                  <BH>Expression</BH>
                  <P>The interpretation of this sub-property depends on the value of the <InlineCode>Renderer</InlineCode> sub-property. If <InlineCode>Renderer</InlineCode> is <InlineCode>(default)</InlineCode> then <InlineCode>Expression</InlineCode> will be interpreted as an OCL expression to be applied to <InlineCode>BoldHandle.Value</InlineCode>.</P>
                  <P>If an explicit renderer has been given, <InlineCode>Expression</InlineCode> is passed as a parameter to the methods/events of the renderer. The renderer is free to use the value in any way desired. For most custom renderers it is just ignored.</P>
                  <BH>Renderer</BH>
                  <P>This property identifies a <See Class="TBoldAsStringRenderer"/> that is used do define the mapping from <See Property="BoldHandle"/><InlineCode>.Value</InlineCode> to the string displayed in the control. The default renderer will apply <InlineCode>Expression</InlineCode> to the value, and then take <InlineCode>TBoldElement.StringRepresentation</InlineCode> on the result. A custom renderer may perform any mapping.</P>
                  <BH>Representation</BH>
                  <P>The interpretation of this sub-property depends on the value of the <InlineCode>Renderer</InlineCode> sub-property. If <InlineCode>Renderer</InlineCode> is <InlineCode>(default)</InlineCode> then <InlineCode>Representation</InlineCode> will be interpreted as the <InlineCode>StringRepresentation</InlineCode> to be used on the element resulting from evaluating <InlineCode>expression</InlineCode>.</P>
                  <P>If an explicit renderer has been given, <InlineCode>Representation</InlineCode> is passed as a parameter to the methods/events of the renderer. The renderer is free to use the value in any way desired. For most custom renderers it is just ignored.</P>
               </Desc>
            </Property>
            <Property Name="Caption">
               <Summary>The value from the business object tier</Summary>
               <Desc><InlineCode>Caption</InlineCode> will be evaluated using the <See Property="Expression"/> applied to the <InlineCode>BoldHandle.Value</InlineCode>.</Desc>
            </Property>
            <Property Name="Color">
               <Summary>This property may be set at design-time to indicate the desired background color of the control. </Summary>
               <Desc>The actual runtime color of the background will be determined by the <See Class="TBoldAsStringRenderer" Method="SetColor" Text="SetColor"/> method of the <See Class="TBoldStringFollowerController" Property="Renderer" Text="Renderer"/> used.
The actual color currently used can be obtained from the <See Property="EffectiveColor"/> property.</Desc>
            </Property>
            <Property Name="EffectiveColor">
               <Summary>This is a read-only property that for the current actual background color of the control. </Summary>
               <Desc>The value of the property will be determined by the <See Class="TBoldAsStringRenderer" Method="SetColor" Text="SetColor"/> method of the <See Class="TBoldStringFollowerController" Property="Renderer" Text="Renderer"/> used, based on the <See Property="Color"/> property. The default renderer will simply use the value of Color.</Desc>
            </Property>
            <Property Name="EffectiveFont">
               <Summary>This is a read-only property that for the current actual font used by the control. </Summary>
               <Desc>The actual runtime font will be determined by the <See Class="TBoldAsStringRenderer" Method="SetFont" Text="SetFont"/> method of <See Class="TBoldStringFollowerController" Property="Renderer" Text="Renderer"/> used, based on the <See Property="Font"/> property. The default renderer will simply use the value of <InlineCode>Font</InlineCode>.</Desc>
            </Property>
            <Property Name="Follower">
               <Summary></Summary>
               <Desc>The follower connects internally to the <See Property="BoldHandle"/> of the control. It is responsible for propagating changes from the handle to the control. </Desc>
            </Property>
            <Property Name="Font">
               <Summary>This property may be set at design-time to indicate the desired font of the control. </Summary>
               <Desc>The actual runtime font will be determined by the <See Class="TBoldAsStringRenderer" Method="SetColor" Text="SetColor"/> method of <See Class="TBoldStringFollowerController" Property="Renderer" Text="Renderer"/> used. The default renderer will simply use the font set at design-time.
                  <P>The font currently used can be obtained from the <See Property="EffectiveFont"/> property.</P>
               </Desc>
            </Property>
         </Properties>
         <Summary>TBoldCustomLabel allows displaying a string value from the Business Object tier of Bold.</Summary>
         <Desc> <See Property="BoldHandle"/> specifies what to display, and the sub-properties of <See Property="BoldProperties"/> specify how the value is to be displayed.
            <BH>Implementation notes</BH>
            <InlineCode>TBoldCustomLabel</InlineCode> keeps most of its properties protected. It is not intended to be used directly, but rather to be subclassed, where the subclasses publish and/or override the behaviour implemented by <InlineCode>TBoldCustomLabel</InlineCode>.
            <BH>Advanced information</BH>
            <InlineCode>TBoldCustomLabel</InlineCode> allows all aspects of the displayed text, including the <InlineCode>Font</InlineCode> and <InlineCode>Color</InlineCode>.
            <P>In order to do this <InlineCode>TBoldCustomLabel</InlineCode> overrides the <InlineCode>Font</InlineCode> and <InlineCode>Color</InlineCode> properties inherited from <InlineCode>TCustomLabel</InlineCode>. For each of these properties there is a pair of properties where e.g. <InlineCode>Color</InlineCode> is the value set at design-time, while <InlineCode>EffectiveColor</InlineCode> is the actual color currently displayed.</P>
         </Desc>
      </Class>
      <Class Name="TBoldLabel">
         <Events>
            <Event Name="OnClick">
               <Summary></Summary>
               <Desc></Desc>
            </Event>
            <Event Name="OnContextPopup">
               <Summary></Summary>
               <Desc></Desc>
            </Event>
            <Event Name="OnDblClick">
               <Summary></Summary>
               <Desc></Desc>
            </Event>
            <Event Name="OnDragDrop">
               <Summary></Summary>
               <Desc></Desc>
            </Event>
            <Event Name="OnDragOver">
               <Summary></Summary>
               <Desc></Desc>
            </Event>
            <Event Name="OnEndDock">
               <Summary></Summary>
               <Desc></Desc>
            </Event>
            <Event Name="OnEndDrag">
               <Summary></Summary>
               <Desc></Desc>
            </Event>
            <Event Name="OnMouseDown">
               <Summary></Summary>
               <Desc></Desc>
            </Event>
            <Event Name="OnMouseMove">
               <Summary></Summary>
               <Desc></Desc>
            </Event>
            <Event Name="OnMouseUp">
               <Summary></Summary>
               <Desc></Desc>
            </Event>
            <Event Name="OnStartDock">
               <Summary></Summary>
               <Desc></Desc>
            </Event>
            <Event Name="OnStartDrag">
               <Summary></Summary>
               <Desc></Desc>
            </Event>
         </Events>
         <Properties>
            <Property Name="Align">
               <Summary></Summary>
               <Desc></Desc>
            </Property>
            <Property Name="Alignment">
               <Summary></Summary>
               <Desc></Desc>
            </Property>
            <Property Name="Anchors">
               <Summary></Summary>
               <Desc></Desc>
            </Property>
            <Property Name="AutoSize">
               <Summary></Summary>
               <Desc></Desc>
            </Property>
            <Property Name="BoldHandle">
               <Summary></Summary>
               <Desc></Desc>
            </Property>
            <Property Name="BoldProperties">
               <Summary></Summary>
               <Desc></Desc>
            </Property>
            <Property Name="Caption">
               <Summary></Summary>
               <Desc></Desc>
            </Property>
            <Property Name="Color">
               <Summary></Summary>
               <Desc></Desc>
            </Property>
            <Property Name="Constraints">
               <Summary></Summary>
               <Desc></Desc>
            </Property>
            <Property Name="DragCursor">
               <Summary></Summary>
               <Desc></Desc>
            </Property>
            <Property Name="DragKind">
               <Summary></Summary>
               <Desc></Desc>
            </Property>
            <Property Name="DragMode">
               <Summary></Summary>
               <Desc></Desc>
            </Property>
            <Property Name="Enabled">
               <Summary></Summary>
               <Desc></Desc>
            </Property>
            <Property Name="FocusControl">
               <Summary></Summary>
               <Desc></Desc>
            </Property>
            <Property Name="Font">
               <Summary></Summary>
               <Desc></Desc>
            </Property>
            <Property Name="Layout">
               <Summary></Summary>
               <Desc></Desc>
            </Property>
            <Property Name="ParentColor">
               <Summary></Summary>
               <Desc></Desc>
            </Property>
            <Property Name="ParentFont">
               <Summary></Summary>
               <Desc></Desc>
            </Property>
            <Property Name="ParentShowHint">
               <Summary></Summary>
               <Desc></Desc>
            </Property>
            <Property Name="PopupMenu">
               <Summary></Summary>
               <Desc></Desc>
            </Property>
            <Property Name="ShowAccelChar">
               <Summary></Summary>
               <Desc></Desc>
            </Property>
            <Property Name="ShowHint">
               <Summary></Summary>
               <Desc></Desc>
            </Property>
            <Property Name="Transparent">
               <Summary></Summary>
               <Desc></Desc>
            </Property>
            <Property Name="Visible">
               <Summary></Summary>
               <Desc></Desc>
            </Property>
            <Property Name="WordWrap">
               <Summary></Summary>
               <Desc></Desc>
            </Property>
         </Properties>
         <Summary>TBoldLabel allows displaying a string value from the Business Object tier of Bold.</Summary>
         <Desc> <See Class="TBoldCustomLabel" Property="BoldHandle"/> specifies what to display, and the sub-properties of <See Class="TBoldCustomLabel" Property="BoldProperties"/> specify how the value is to be displayed.
            <BH>Advanced information</BH>
            <InlineCode>TBoldLabel</InlineCode> allows setting all aspects of the displayed text, including the <InlineCode>Font</InlineCode> and <InlineCode>Color</InlineCode>.
            <P>In order to do this <InlineCode>TBoldLabel</InlineCode> overrides the <InlineCode>Font</InlineCode> and <InlineCode>Color</InlineCode> properties inherited from <InlineCode>TCustomLabel</InlineCode>. For each of these properties there is a pair of properties where e.g. <InlineCode>Color</InlineCode> is the value set at design-time, while <InlineCode>EffectiveColor</InlineCode> is the actual color currently displayed.</P>
         </Desc>
      </Class>
   </Classes>
   <Summary>Defines the bold aware label. </Summary>
   <Desc>This unit defines the bold aware label component, <InlineCode>TBoldLabel</InlineCode>. It is primarily used to present a non-editable value.</Desc>
</DLUnitDoc>