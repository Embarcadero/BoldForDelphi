<!DOCTYPE DLUnitDoc>
<DLUnitDoc ExplicitSummary="true" Version="$Header: /BfD/Source/BoldAwareGUI/BoldControls/BoldComboBox.UnitDoc 9     02-08-09 16:24 Isje $">
   <Classes>
      <Class Name="TBoldComboBox">
         <Events>
            <Event Name="OnChange">
               <Summary></Summary>
               <Desc></Desc>
            </Event>
            <Event Name="OnClick">
               <Summary></Summary>
               <Desc></Desc>
            </Event>
            <Event Name="OnContextPopup">
               <Summary></Summary>
               <Desc></Desc>
            </Event>
            <Event Name="OnDblClick">
               <Summary></Summary>
               <Desc></Desc>
            </Event>
            <Event Name="OnDragDrop">
               <Summary></Summary>
               <Desc></Desc>
            </Event>
            <Event Name="OnDragOver">
               <Summary></Summary>
               <Desc></Desc>
            </Event>
            <Event Name="OnDrawItem">
               <Summary></Summary>
               <Desc></Desc>
            </Event>
            <Event Name="OnDropDown">
               <Summary></Summary>
               <Desc></Desc>
            </Event>
            <Event Name="OnEndDock">
               <Summary></Summary>
               <Desc></Desc>
            </Event>
            <Event Name="OnEndDrag">
               <Summary></Summary>
               <Desc></Desc>
            </Event>
            <Event Name="OnEnter">
               <Summary></Summary>
               <Desc></Desc>
            </Event>
            <Event Name="OnExit">
               <Summary></Summary>
               <Desc></Desc>
            </Event>
            <Event Name="OnKeyDown">
               <Summary></Summary>
               <Desc></Desc>
            </Event>
            <Event Name="OnKeyPress">
               <Summary></Summary>
               <Desc></Desc>
            </Event>
            <Event Name="OnKeyUp">
               <Summary></Summary>
               <Desc></Desc>
            </Event>
            <Event Name="OnMeasureItem">
               <Summary></Summary>
               <Desc></Desc>
            </Event>
            <Event Name="OnSelectChanged">
               <Summary></Summary>
               <Desc></Desc>
            </Event>
            <Event Name="OnStartDock">
               <Summary></Summary>
               <Desc></Desc>
            </Event>
            <Event Name="OnStartDrag">
               <Summary></Summary>
               <Desc></Desc>
            </Event>
         </Events>
         <Properties>
            <Property Name="Alignment">
               <Summary></Summary>
               <Desc></Desc>
            </Property>
            <Property Name="Anchors">
               <Summary></Summary>
               <Desc></Desc>
            </Property>
            <Property Name="BoldHandle">
               <Summary></Summary>
               <Desc></Desc>
            </Property>
            <Property Name="BoldListHandle">
               <Summary></Summary>
               <Desc></Desc>
            </Property>
            <Property Name="BoldListProperties">
               <Summary></Summary>
               <Desc></Desc>
            </Property>
            <Property Name="BoldProperties">
               <Summary></Summary>
               <Desc></Desc>
            </Property>
            <Property Name="BoldRowProperties">
               <Summary></Summary>
               <Desc></Desc>
            </Property>
            <Property Name="BoldSelectChangeAction">
               <Summary></Summary>
               <Desc></Desc>
            </Property>
            <Property Name="BoldSetValueExpression">
               <Summary></Summary>
               <Desc></Desc>
            </Property>
            <Property Name="CharCase">
               <Summary></Summary>
               <Desc></Desc>
            </Property>
            <Property Name="Color">
               <Summary></Summary>
               <Desc></Desc>
            </Property>
            <Property Name="Constraints">
               <Summary></Summary>
               <Desc></Desc>
            </Property>
            <Property Name="Ctl3D">
               <Summary></Summary>
               <Desc></Desc>
            </Property>
            <Property Name="DragCursor">
               <Summary></Summary>
               <Desc></Desc>
            </Property>
            <Property Name="DragKind">
               <Summary></Summary>
               <Desc></Desc>
            </Property>
            <Property Name="DragMode">
               <Summary></Summary>
               <Desc></Desc>
            </Property>
            <Property Name="DropDownCount">
               <Summary></Summary>
               <Desc></Desc>
            </Property>
            <Property Name="EffectiveColor">
               <Summary></Summary>
               <Desc></Desc>
            </Property>
            <Property Name="EffectiveFont">
               <Summary></Summary>
               <Desc></Desc>
            </Property>
            <Property Name="EffectiveReadOnly">
               <Summary></Summary>
               <Desc></Desc>
            </Property>
            <Property Name="Enabled">
               <Summary></Summary>
               <Desc></Desc>
            </Property>
            <Property Name="Font">
               <Summary></Summary>
               <Desc></Desc>
            </Property>
            <Property Name="ItemHeight">
               <Summary></Summary>
               <Desc></Desc>
            </Property>
            <Property Name="MaxLength">
               <Summary></Summary>
               <Desc></Desc>
            </Property>
            <Property Name="ParentBiDiMode">
               <Summary></Summary>
               <Desc></Desc>
            </Property>
            <Property Name="ParentColor">
               <Summary></Summary>
               <Desc></Desc>
            </Property>
            <Property Name="ParentCtl3D">
               <Summary></Summary>
               <Desc></Desc>
            </Property>
            <Property Name="ParentFont">
               <Summary></Summary>
               <Desc></Desc>
            </Property>
            <Property Name="ParentShowHint">
               <Summary></Summary>
               <Desc></Desc>
            </Property>
            <Property Name="PopupMenu">
               <Summary></Summary>
               <Desc></Desc>
            </Property>
            <Property Name="ReadOnly">
               <Summary></Summary>
               <Desc></Desc>
            </Property>
            <Property Name="ShowHint">
               <Summary></Summary>
               <Desc></Desc>
            </Property>
            <Property Name="Sorted">
               <Summary></Summary>
               <Desc></Desc>
            </Property>
            <Property Name="Style">
               <Summary></Summary>
               <Desc></Desc>
            </Property>
            <Property Name="TabOrder">
               <Summary></Summary>
               <Desc></Desc>
            </Property>
            <Property Name="TabStop">
               <Summary></Summary>
               <Desc></Desc>
            </Property>
            <Property Name="Text">
               <Summary></Summary>
               <Desc></Desc>
            </Property>
            <Property Name="Visible">
               <Summary></Summary>
               <Desc></Desc>
            </Property>
         </Properties>
         <Summary>The TBoldComboBox is used for selecting values from a list into a single value.</Summary>
         <Desc>The <InlineCode>TBoldComboBox</InlineCode> merely published functionality introduced in <See Class="TBoldCustomComboBox"/>. It adds no new functionality.
The <InlineCode>TBoldComboBox</InlineCode> is used for selecting values from a list into a single value. There are several ways to use the combobox;
            <UL>
               <LI>Setting a single link from a list of candidate 'other ends'</LI>
               <LI>Setting a string attribute from a list of strings</LI>
               <LI>Setting a value set value from a list of the possible values in the set.</LI>
               <LI>Changing the current index in a list handle</LI>
            </UL>
         </Desc>
      </Class>
      <Class Name="TBoldComboListController">
         <Properties>
            <Property Name="NilElementMode">
               <Summary>Specifies how to add nil elements</Summary>
               <Desc>In some cases, users should be allowed to clean a link, i.e. setting it to nil. NilElementMode specifies if and how such a nil element should be added to the list.
                  <BH>Options</BH>
                  <UL>
                     <LI><InlineCode>neNone</InlineCode> - No nil element is present in the list</LI>
                     <LI><InlineCode>neAddLast</InlineCode> - a nil element is added at the end of the list</LI>
                     <LI><InlineCode>neInsertFirst</InlineCode> - a nil element is inserted first in the list</LI>
                  </UL>
               </Desc>
            </Property>
         </Properties>
         <Summary></Summary>
         <Desc></Desc>
      </Class>
      <Class Name="TBoldCustomComboBox">
         <Events>
            <Event Name="OnSelectChanged">
               <Summary></Summary>
               <Desc></Desc>
            </Event>
         </Events>
         <Methods>
            <Method Name="CMEnter">
               <Summary></Summary>
               <Desc></Desc>
            </Method>
            <Method Name="CMExit">
               <Summary></Summary>
               <Desc></Desc>
            </Method>
            <Method Name="CMParentColorChanged">
               <Summary></Summary>
               <Desc></Desc>
            </Method>
            <Method Name="CMParentFontChanged">
               <Summary></Summary>
               <Desc></Desc>
            </Method>
            <Method Name="Change">
               <Summary></Summary>
               <Desc></Desc>
            </Method>
            <Method Name="ChangeScale">
               <Summary>Internal use.</Summary>
               <Desc>Overrides the VCL procedure ChangeScale. ChangeScale repositions and rezises the control according to specified integers.</Desc>
            </Method>
            <Method Name="ComboAllowsTextEditing">
               <Summary></Summary>
               <Desc></Desc>
            </Method>
            <Method Name="ComboWndProc">
               <Summary>Provides message responses for the bold combo box.</Summary>
               <Desc>Overrides TCustomComboBox.ComboWndProc.</Desc>
            </Method>
            <Method Name="Create">
               <Summary>Creates an instance of TBoldCustomComboBox</Summary>
               <Desc>Use create to create an instance of <InlineCode>TBoldCustomComboBox</InlineCode></Desc>
            </Method>
            <Method Name="CreateWnd">
               <Summary></Summary>
               <Desc></Desc>
            </Method>
            <Method Name="Destroy">
               <Summary>Destroys an instance of the component</Summary>
               <Desc>Do not call <InlineCode>Destroy</InlineCode> dircetly. use <InlineCode>Free</InlineCode> instead.</Desc>
            </Method>
            <Method Name="DoEndDrag">
               <Summary></Summary>
               <Desc></Desc>
            </Method>
            <Method Name="DoStartDrag">
               <Summary></Summary>
               <Desc></Desc>
            </Method>
            <Method Name="DragDrop">
               <Summary></Summary>
               <Desc></Desc>
            </Method>
            <Method Name="DragOver">
               <Summary></Summary>
               <Desc></Desc>
            </Method>
            <Method Name="FontChanged">
               <Summary></Summary>
               <Desc></Desc>
            </Method>
            <Method Name="GetBoldHandle">
               <Summary></Summary>
               <Desc></Desc>
            </Method>
            <Method Name="GetBoldListHandle">
               <Summary></Summary>
               <Desc></Desc>
            </Method>
            <Method Name="GetContextForBoldProperties">
               <Summary></Summary>
               <Desc></Desc>
            </Method>
            <Method Name="GetContextForBoldRowProperties">
               <Summary></Summary>
               <Desc></Desc>
            </Method>
            <Method Name="GetEffectiveColor">
               <Summary></Summary>
               <Desc></Desc>
            </Method>
            <Method Name="GetEffectiveFont">
               <Summary></Summary>
               <Desc></Desc>
            </Method>
            <Method Name="GetFollower">
               <Summary></Summary>
               <Desc></Desc>
            </Method>
            <Method Name="GetListFollower">
               <Summary></Summary>
               <Desc></Desc>
            </Method>
            <Method Name="GetPopupMenu">
               <Summary></Summary>
               <Desc></Desc>
            </Method>
            <Method Name="GetSelectedElement">
               <Summary></Summary>
               <Desc></Desc>
            </Method>
            <Method Name="GetText">
               <Summary></Summary>
               <Desc></Desc>
            </Method>
            <Method Name="HandleApplyException">
               <Summary></Summary>
               <Desc></Desc>
            </Method>
            <Method Name="IsColorStored">
               <Summary></Summary>
               <Desc></Desc>
            </Method>
            <Method Name="IsFontStored">
               <Summary></Summary>
               <Desc></Desc>
            </Method>
            <Method Name="KeyDown">
               <Summary></Summary>
               <Desc></Desc>
            </Method>
            <Method Name="KeyPress">
               <Summary></Summary>
               <Desc></Desc>
            </Method>
            <Method Name="SetBoldHandle">
               <Summary></Summary>
               <Desc></Desc>
            </Method>
            <Method Name="SetBoldListHandle">
               <Summary></Summary>
               <Desc></Desc>
            </Method>
            <Method Name="SetBoldListProperties">
               <Summary></Summary>
               <Desc></Desc>
            </Method>
            <Method Name="SetBoldProperties">
               <Summary></Summary>
               <Desc></Desc>
            </Method>
            <Method Name="SetBoldSelectChangeAction">
               <Summary></Summary>
               <Desc></Desc>
            </Method>
            <Method Name="SetCharCase">
               <Summary></Summary>
               <Desc></Desc>
            </Method>
            <Method Name="SetColor">
               <Summary></Summary>
               <Desc></Desc>
            </Method>
            <Method Name="SetEffectiveReadOnly">
               <Summary></Summary>
               <Desc></Desc>
            </Method>
            <Method Name="SetEffectiveText">
               <Summary></Summary>
               <Desc></Desc>
            </Method>
            <Method Name="SetFocused">
               <Summary></Summary>
               <Desc></Desc>
            </Method>
            <Method Name="SetFont">
               <Summary></Summary>
               <Desc></Desc>
            </Method>
            <Method Name="SetReadOnly">
               <Summary></Summary>
               <Desc></Desc>
            </Method>
            <Method Name="SetRowProperties">
               <Summary></Summary>
               <Desc></Desc>
            </Method>
            <Method Name="SetText">
               <Summary></Summary>
               <Desc></Desc>
            </Method>
            <Method Name="UpdateEffectiveColor">
               <Summary></Summary>
               <Desc></Desc>
            </Method>
            <Method Name="UpdateEffectiveFont">
               <Summary></Summary>
               <Desc></Desc>
            </Method>
            <Method Name="UpdateEffectiveReadOnly">
               <Summary></Summary>
               <Desc></Desc>
            </Method>
            <Method Name="ValidateComponent">
               <Summary></Summary>
               <Desc></Desc>
            </Method>
            <Method Name="WMPaint">
               <Summary></Summary>
               <Desc></Desc>
            </Method>
            <Method Name="WndProc">
               <Summary>Processes messages received by the bold combo box.</Summary>
               <Desc>Overrides TCustomComboBox.WndProc.</Desc>
            </Method>
            <Method Name="_AfterMakeUptoDate">
               <Summary></Summary>
               <Desc></Desc>
            </Method>
            <Method Name="_DeleteItem">
               <Summary></Summary>
               <Desc></Desc>
            </Method>
            <Method Name="_InsertItem">
               <Summary></Summary>
               <Desc></Desc>
            </Method>
            <Method Name="_RowAfterMakeUptoDate">
               <Summary></Summary>
               <Desc></Desc>
            </Method>
         </Methods>
         <Properties>
            <Property Name="Alignment">
               <Summary></Summary>
               <Desc></Desc>
            </Property>
            <Property Name="BoldHandle">
               <Summary>The handle that will be affected by changing current pointer in the list</Summary>
               <Desc>BoldHandle is the handle that holds the single element to be changed when <See Property="BoldSelectChangeAction"/> is set to <InlineCode>bdcsSetValue</InlineCode> or <InlineCode>bdcsSetReference</InlineCode>.</Desc>
            </Property>
            <Property Name="BoldListHandle">
               <Summary>BoldListHandle provides the list of elements visible in the drop down list</Summary>
               <Desc>The list of elements in the drop-down part of the component are provided by the <InlineCode>BoldListHandle</InlineCode>.</Desc>
            </Property>
            <Property Name="BoldListProperties">
               <Summary>Properties for the list</Summary>
               <Desc>BoldListProperties specify how the list is acting. The only useful setting is <See Class="TBoldComboListController" Property="NilElementMode" Text="NilElementMode"/></Desc>
            </Property>
            <Property Name="BoldProperties">
               <Summary>Properties for the single value</Summary>
               <Desc>This property has a number of sub-properties that control the Bold-aware aspects of the control. In the context of this control, the sub-properties have the following meaning:
                  <BH>ApplyPolicy</BH>
                  <P>Changing <InlineCode>ApplyPolicy</InlineCode><See Property="Renderer" Class="TBoldStringPropertiesController"/> has meaning only if the <See Property="BoldSelectChangeAction"/> is set to <InlineCode>bdscSetText</InlineCode>.</P>
                  <BH>CleanOnEqual</BH>
                  <P>If <InlineCode>CleanOnEqual</InlineCode> is <InlineCode>True</InlineCode> then if the value of the control is changed, and then subsequently changed back to the original value before it has been applied to the business objects, then it will be regarded as unchanged, and removed form the Apply list.</P>
                  <BH>DragMode</BH>
                  <P>Has no meaning here</P>
                  <BH>DropMode</BH>
                  <P>Has no meaning here</P>
                  <BH>Expression</BH>
                  <P>The interpretation of this sub-property depends on the value of the <See Class="TBoldStringPropertiesController" Property="Renderer" Text="Renderer"/> sub-property. If <InlineCode>Renderer</InlineCode> is <InlineCode>(default)</InlineCode> then <InlineCode>Expression</InlineCode> will be interpreted as an OCL expression to be applied to <InlineCode>BoldHandle.Value</InlineCode>.</P>
                  <P>If an explicit renderer has been given, <InlineCode>Expression</InlineCode> is passed as a parameter to the methods/events of the renderer. The renderer is free to use the value in any way desired. For most custom renderers it is just ignored.</P>
                  <BH>NilStringExpression</BH>
                  <P>An OCL expression determining how a nil-element shall be displayed</P>
                  <BH>Renderer</BH>
                  <P>This property identifies a <InlineCode>TBoldAsStringRenderer</InlineCode> that is used do define the mapping from <See Class="TBoldCustomComboBox" Property="BoldHandle" Text="BoldHandle"/>.Value to the string displayed in the control. The default renderer will apply <InlineCode>Expression</InlineCode> to the value, and then take <See Class="TBoldElement" Property="StringRepresentation"/> on the result. A custom renderer may perform any mapping.</P>
                  <BH>Representation</BH>
                  <P>The interpretation of this sub-property depends on the value of the <InlineCode>Renderer</InlineCode> sub-property. If <InlineCode>Renderer</InlineCode> is <InlineCode>(default)</InlineCode> then <InlineCode>Representation</InlineCode> will be interpreted as the <InlineCode>StringRepresentation</InlineCode> to be used on the element resulting from evaluating expression.</P>
                  <P>If an explicit renderer has been given, <InlineCode>Representation</InlineCode> is passed as a parameter to the methods/events of the renderer. The renderer is free to use the value in any way desired. For most custom renderers it is just ignored.</P>
                  <BH>Variables</BH>
Points to a variable definition list to use in OCL expressions. </Desc>
            </Property>
            <Property Name="BoldRowProperties">
               <Summary>Properties for the elements in the list</Summary>
               <Desc>This property has a number of sub-properties that control the Bold-aware aspects of the control. In the context of this control, the sub-properties have the following meaning:
                  <BH>ApplyPolicy</BH>
                  <P>Has no meaning here</P>
                  <BH>CleanOnEqual</BH>
                  <P>Has no meaning here</P>
                  <BH>DragMode</BH>
                  <P>Has no meaning here</P>
                  <BH>DropMode</BH>
                  <P>Has no meaning here</P>
                  <BH>Expression</BH>
                  <P>The interpretation of this sub-property depends on the value of the <See Class="TBoldStringPropertiesController" Property="Renderer" Text="Renderer"/> sub-property. If <InlineCode>Renderer</InlineCode> is <InlineCode>(default)</InlineCode> then <InlineCode>Expression</InlineCode> will be interpreted as an OCL expression to be applied to <InlineCode>BoldHandle.Value</InlineCode>.</P>
                  <P>If an explicit renderer has been given, <InlineCode>Expression</InlineCode> is passed as a parameter to the methods/events of the renderer. The renderer is free to use the value in any way desired. For most custom renderers it is just ignored.</P>
                  <BH>NilStringExpression</BH>
                  <P>An OCL expression determining how a nil-element shall be displayed</P>
                  <BH>Renderer</BH>
                  <P>This property identifies a <InlineCode>TBoldAsStringRenderer</InlineCode> that is used do define the mapping from <See Class="TBoldCustomComboBox" Property="BoldHandle" Text="BoldHandle"/>.Value to the string displayed in the control. The default renderer will apply <InlineCode>Expression</InlineCode> to the value, and then take <See Class="TBoldElement" Property="StringRepresentation"/> on the result. A custom renderer may perform any mapping.</P>
                  <BH>Representation</BH>
                  <P>The interpretation of this sub-property depends on the value of the <InlineCode>Renderer</InlineCode> sub-property. If <InlineCode>Renderer</InlineCode> is <InlineCode>(default)</InlineCode> then <InlineCode>Representation</InlineCode> will be interpreted as the <InlineCode>StringRepresentation</InlineCode> to be used on the element resulting from evaluating expression.</P>
                  <P>If an explicit renderer has been given, <InlineCode>Representation</InlineCode> is passed as a parameter to the methods/events of the renderer. The renderer is free to use the value in any way desired. For most custom renderers it is just ignored.</P>
                  <BH>Variables</BH>
Points to a variable definition list to use in OCL expressions. </Desc>
            </Property>
            <Property Name="BoldSelectChangeAction">
               <Summary>Property to determine what happens when the selection changes</Summary>
               <Desc>The combobox can be used in several ways. There are four separete usage modes, selectable via this property.
<BH>Values</BH>
<UL><LI><B>bdscSetText</B> - Sets the <InlineCode>AsString</InlineCode>-property of the selected element</LI>
<LI><B>bdcsSetValue</B> - Sets the value of the [single link] held by the expression handle pointed to by the <See Property="BoldHandle"/>-property</LI>
<LI><B>bdcsNone</B> - no action is done on selection change</LI>
<LI><B>bdcsSetReference</B> - Changes the value of a <InlineCode>TBoldReferenceHandle</InlineCode> pointed to by the BoldHandle property. Note that the BoldHandle <I>must</I> be a TBoldReferenceHandle when this change action is selected.</LI>
<LI><B>bdcsSetListIndex</B> - sets the currentIndex of the list handle pointed to by the <See Property="BoldListHandle"/> property</LI></UL></Desc>
            </Property>
            <Property Name="BoldSetValueExpression">
               <Summary>Expression to use when setting the value</Summary>
               <Desc>If <See Property="BoldSelectChangeAction"/> is set to <InlineCode>bdcsSetValue</InlineCode> the expression specified in <InlineCode>BoldSetValueExpression</InlineCode> is evaluated relative the <See Property="BoldHandle"/> to get to the element to assign the new value to.</Desc>
            </Property>
            <Property Name="CharCase">
               <Summary></Summary>
               <Desc></Desc>
            </Property>
            <Property Name="Color">
               <Summary></Summary>
               <Desc></Desc>
            </Property>
            <Property Name="EffectiveColor">
               <Summary></Summary>
               <Desc></Desc>
            </Property>
            <Property Name="EffectiveFont">
               <Summary></Summary>
               <Desc></Desc>
            </Property>
            <Property Name="EffectiveReadOnly">
               <Summary></Summary>
               <Desc></Desc>
            </Property>
            <Property Name="Follower">
               <Summary></Summary>
               <Desc></Desc>
            </Property>
            <Property Name="Font">
               <Summary></Summary>
               <Desc></Desc>
            </Property>
            <Property Name="ListFollower">
               <Summary></Summary>
               <Desc></Desc>
            </Property>
            <Property Name="ReadOnly">
               <Summary></Summary>
               <Desc></Desc>
            </Property>
            <Property Name="SelectedElement">
               <Summary></Summary>
               <Desc></Desc>
            </Property>
            <Property Name="Text">
               <Summary></Summary>
               <Desc></Desc>
            </Property>
         </Properties>
         <Summary>Bold-aware combo box</Summary>
         <Desc>This is the 'Custom' version of the Bold-aware combo box component. <See Class="TBoldComboBox"/> is the concrete component to be placed on forms.</Desc>
      </Class>
   </Classes>
   <Interfaces>
   </Interfaces>
   <Summary>Defines the BoldComboBox. </Summary>
   <Desc>This unit defines the TBoldComboBox. This component is primarily used for selecting one value from a list.</Desc>
</DLUnitDoc>